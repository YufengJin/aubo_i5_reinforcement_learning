<launch>

<!--  <param name="robot_description" textfile="$(find aubo_gazebo)/urdf/aubo_i5.xacro"/>-->

  <!-- 1.startup Gazebo -->
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>


  <rosparam command="load" file="$(find aubo_gazebo)/config/joint_names.yaml"/>


  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <!-- Send robot urdf to param server -->
  <param name="robot_description" textfile="$(find aubo_gazebo)/urdf/aubo_i5_with_gripper.urdf" />

  <!-- publish a static transformation of center of gripper -->
  <node name="tf_publisher_ee" pkg="tf" type="static_transform_publisher" args="0 0 0.13 0 0 0 robotiq_coupler robotiq_gripper_center 50" />
      

  <!-- 2.Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawner_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model aubo -param robot_description"/> 		

	<!-- load configuration to rosparam -->
  <rosparam file="$(find aubo_gazebo)/config/aubo_i5_gazebo_control.yaml" command="load"/> 							     
  <rosparam file="$(find aubo_gazebo)/config/joint_names.yaml" command="load"/>                   

  <!-- spawn controller manager for gripper and arm -->
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/aubo_i5" args="joint_state_controller"/>

	<node name="gripper_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" ns="/aubo_i5" args="spawn gripper_controller"/>

  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
                                        output="screen"  ns="/aubo_i5" args="spawn arm_controller"/>

  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" ns="/aubo_i5" args="load joint_group_position_controller" />

  <!-- TF -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <remap from="/joint_states" to="/aubo_i5/joint_states" />
  </node>

  <!-- 3.run transform node /joint_state -> /gazebo every joint/command -->
<!--   <node name="aubo_gazebo_driver" pkg="aubo_driver" type="aubo_gazebo_driver" /> -->


</launch>
