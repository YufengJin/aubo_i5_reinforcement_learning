<launch>

<!--  <param name="robot_description" textfile="$(find aubo_gazebo)/urdf/aubo_i5.xacro"/>-->

  <!-- 1.startup Gazebo -->
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>


  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <!-- Send robot urdf to param server -->
  <param name="robot_description" textfile="$(find aubo_gazebo)/urdf/aubo_i5.urdf" />

  <!-- 2.Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawner_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model aubo_i5 -param robot_description"/> 		

  <!-- publish a static transformation of center of gripper -->
  <node name="tf_publisher_ee" pkg="tf" type="static_transform_publisher" args="0 0 0.13 0 3.1415 0 robotiq_coupler robotiq_gripper_center 100" />
			

  <rosparam file="$(find aubo_gazebo)/config/joint_names.yaml" command="load"/>                   

  <include file="$(find aubo_gazebo)/launch/controller_utils.launch"/>

  <!-- <include file="$(find moveit_config)/launch/move_group.launch"/> -->
  <!-- 3.run transform node /joint_state -> /gazebo every joint/command -->
<!--   <node name="aubo_gazebo_driver" pkg="aubo_driver" type="aubo_gazebo_driver" /> -->


</launch>
